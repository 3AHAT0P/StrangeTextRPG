import {
  AbstractInteraction,
  SimpleInteraction, Interaction,
} from '@interactions';
import { AbstractItem } from '@actors/AbstractItem';

import { AbstractNPCOptions, AbstractNPC } from './AbstractNPC';

export interface GoodItem {
  name: string;
  message: string;
  action: string;
  price: number;
  item: AbstractItem;
}

export interface MerchantNPCOptions extends AbstractNPCOptions {
  goods: Set<GoodItem>;
}

export class MerchantNPC extends AbstractNPC {
  protected goods: Set<GoodItem>;

  constructor(options: MerchantNPCOptions) {
    super(options);

    this.goods = options.goods;
  }

  protected async buildInteractionSequance(): Promise<[AbstractInteraction, AbstractInteraction]> {
    const { ui } = this;
    const { player } = this;

    const introInteraction = new SimpleInteraction({ ui, message: 'üí¨ [–¢–æ—Ä–≥–æ–≤–µ—Ü]: –ü—Ä–∏–≤–µ—Ç!' });

    const notEnoughtMoneyInteraction = new SimpleInteraction({
      ui,
      message: `üí¨ [–¢–æ—Ä–≥–æ–≤–µ—Ü]: –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —É ${player.getType({ declension: 'genitive' })} –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –∑–æ–ª–æ—Ç–∞.`,
    });

    const i1 = new SimpleInteraction({
      ui,
      message: `üí¨ [–¢–æ—Ä–≥–æ–≤–µ—Ü]: –ò–∑–≤–∏–Ω–∏, –∑–∞ —Å—Ç–æ–ª—å —Å–∫—É–¥–Ω—ã–π –≤—ã–±–æ—Ä.\n${
        Array.from(this.goods.values()).map(({ message }, index) => `${index + 1}. ${message}`).join('\n')}`,
    });
    introInteraction.addAction('–ü—Ä–∏–≤–µ—Ç!', i1, `üí¨ [${player.getType({ declension: 'nominative', capitalised: true })}]: –ü—Ä–∏–≤–µ—Ç!`);

    const i2 = new SimpleInteraction({ ui, message: 'üí¨ [–¢–æ—Ä–≥–æ–≤–µ—Ü]: –ß–µ–≥–æ –∏–∑–≤–æ–ª–∏—à—å?' });
    i1.addAutoAction(i2);
    notEnoughtMoneyInteraction.addAutoAction(i2);

    for (const goodItem of this.goods.values()) {
      const i3 = new Interaction({
        ui,
        async activate() {
          const result = player.exchangeGoldToItem(goodItem.price, [goodItem.item]);
          if (!result) return notEnoughtMoneyInteraction;

          const playerGold = player.inventory.gold;

          const i4 = new SimpleInteraction({
            ui,
            message: `‚öôÔ∏è –£ ${player.getType({ declension: 'genitive' })} –æ—Å—Ç–∞–ª–æ—Å—å ${playerGold} –∑–æ–ª–æ—Ç–∞`,
          });

          i4.addAutoAction(i2);

          return i4;
        },
      });
      i2.addAction(`${goodItem.action} ${goodItem.item.baseName}`, i3);
    }

    const epilogInteraction = new SimpleInteraction({ ui, message: 'üí¨ [–¢–æ—Ä–≥–æ–≤–µ—Ü]: –ü—Ä–∏—Ö–æ–¥–∏ –µ—â–µ :)' });
    i2.addAction('–ù–∏—á–µ–≥–æ, —Å–ø–∞—Å–∏–±–æ.', epilogInteraction, `üí¨ [${player.getType({ declension: 'nominative', capitalised: true })}]: –ù–∏—á–µ–≥–æ, —Å–ø–∞—Å–∏–±–æ.`);

    return [introInteraction, epilogInteraction];
  }
}
