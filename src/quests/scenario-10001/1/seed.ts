import { InteractionEntity } from '@db/entities';
import { QuestBuilderOptions } from '@quests/@types';

import { quest1Id, Quest1States } from './info';

export const quest1Seed = ({ spot, baseInfo, dataCollection }: QuestBuilderOptions): void => {
  const quest1Interaction = dataCollection.addContainer<InteractionEntity>('Interaction', {
    ...baseInfo,
    text: '–í–Ω–µ–∑–∞–ø–Ω–æ, {{actorType player declension="nominative"}} —Å–ø–æ—Ç—ã–∫–∞–µ—à—å—Å—è –æ —Ç—Ä—É–ø –∫—Ä—ã—Å—ã.',
  });

  dataCollection.addLink(spot, {
    ...baseInfo,
    to: quest1Interaction.entity.interactionId,
    text: '',
    condition: `{{questStateIsEQ "${quest1Id}" "${Quest1States.PRE_INITIAL}"}}`,
    type: 'AUTO',
    subtype: 'OTHER',
  });

  dataCollection.addLink(quest1Interaction, {
    ...baseInfo,
    to: spot.entity.interactionId,
    text: '',
    operation: `{{updateQuestState "${quest1Id}" "${Quest1States.INITIAL}"}}`,
    type: 'AUTO',
    subtype: 'OTHER',
  });

  const quest1LookupInteraction = dataCollection.addContainer<InteractionEntity>('Interaction', {
    ...baseInfo,
    text: '–ö—Ä—ã—Å–∞, –∫–∞–∫ –∫—Ä—ã—Å–∞. –ù–æ –≤ –±–æ–∫—É —É –Ω–µ–µ —Ç–æ—Ä—á–∏—Ç –Ω–æ–∂. –û, —Ç–µ–ø–µ—Ä—å –±—É–¥–µ—Ç —á–µ–º –æ—Ç–±–∏–≤–∞—Ç—å—Å—è –æ—Ç —ç—Ç–∏—Ö —Ç–≤–∞—Ä–µ–π!',
  });

  dataCollection.addLink(spot, {
    ...baseInfo,
    to: quest1LookupInteraction.entity.interactionId,
    text: 'üëÄ –û—Å–º–æ—Ç—Ä–µ—Ç—å —Ç—Ä—É–ø',
    condition: `{{questStateIsEQ "${quest1Id}" "${Quest1States.INITIAL}"}}`,
    type: 'CUSTOM',
    subtype: 'OTHER',
    isPrintable: true,
  });

  dataCollection.addLink(quest1LookupInteraction, {
    ...baseInfo,
    to: spot.entity.interactionId,
    text: '',
    operation: `{{updateQuestState "${quest1Id}" "${Quest1States.FINISHED_GOOD}"}}`,
    type: 'AUTO',
    subtype: 'OTHER',
  });
};
